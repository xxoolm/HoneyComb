import groovy.xml.XmlUtil

apply plugin: 'com.android.application'

android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        applicationId "github.tornaco.practice.honeycomb.locker"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    // Test
    testImplementation deps.junit
    androidTestImplementation(deps.espresso.core, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // Support Libraries
    implementation deps.support.app_compat
    implementation deps.support.design
    implementation deps.support.recyclerview
    implementation deps.support.constraint

    // Arch
    implementation deps.lifecycle.extensions

    // Tor
    implementation deps.tornaco.logger

    implementation deps.guava

    // Lombok
    annotationProcessor deps.lombok.core
    compileOnly deps.lombok.core

    // Xposed
    compileOnly deps.xposed.api

    // Framework
    compileOnly files('../hidden-api/android-27.jar')
    compileOnly files('../hidden-api/services-27.jar')

    // Sdk
    implementation project(":sdk")
}

preBuild {
    doLast {
        def imlFile = file(project.name + ".iml")
        println 'Change ' + project.name + '.iml order'
        try {
            def parsedXml = (new XmlParser()).parse(imlFile)
            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
            parsedXml.component[1].remove(jdkNode)
            def sdkString = "Android API " + android.compileSdkVersion.substring("android-".length()) + " Platform"
            //noinspection GroovyResultOfObjectAllocationIgnored
            new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': sdkString, 'jdkType': 'Android SDK'])
            XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
        } catch (FileNotFoundException e) {
            // nop, iml not found
        }
    }
}